name: Build and Deploy NGINX to ECR and EKS

on:
  push:
    branches:
      - master

jobs:
  build-and-push-ecr:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}  # Ensure you have this secret set in your GitHub repository
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}  # AWS credentials
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      with:
        mask-password: false
        registry-type: private
        skip-logout: false

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build the Docker image
        docker build -t rakeshecr .
        # Tag the image for ECR
        docker tag rakeshecr:latest 825765405225.dkr.ecr.us-east-2.amazonaws.com/rakeshecr:latest
        # Push the image to ECR
        docker push 825765405225.dkr.ecr.us-east-2.amazonaws.com/rakeshecr:latest
    - name: Upload image to S3
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}
        S3_BUCKET: ${{ secrets.S3_BUCKET }}
      run: |
        # Save the image to a tar file
        docker save 825765405225.dkr.ecr.us-east-2.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }} -o image.tar
        # Upload the tar file to S3
        docker save 825765405225.dkr.ecr.***.amazonaws.com/***:2b612daf6007d987967df63252e8d4b1896042ba -o image.tar
        docker save 825765405225.dkr.ecr.***.amazonaws.com/***:$IMAGE_TAG -o image.tar



  deploy-to-eks:
    runs-on: ubuntu-latest
    needs: build-and-push-ecr

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure kubectl
      uses: aws-actions/eks-kubectl-action@v1
      with:
        cluster-name: ${{ secrets.EKS_CLUSTER_NAME }}
        region: ${{ secrets.AWS_REGION }}

    - name: Deploy to EKS
      env:
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Update the Kubernetes deployment to use the new image
        kubectl set image deployment/nginx-deployment nginx=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG
